"""create expenses payments table

Revision ID: 1c319e39f15c
Revises: 46ad2ad8504e
Create Date: 2025-07-17 17:13:05.202092

"""
from alembic import op
import sqlalchemy as sa
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '1c319e39f15c'
down_revision = '46ad2ad8504e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('expenses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=30), nullable=False),
    sa.Column('expense_owner', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['expense_owner'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense_members',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount_owed', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('settled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['expense_id'], ['expenses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    #op.create_table('payments',
    #sa.Column('id', sa.Integer(), nullable=False),
    #sa.Column('note', sa.String(length=255), nullable=True),
    #sa.Column('status', sa.String(length=20), nullable=False),
    #sa.Column('created_at', sa.DateTime(), nullable=True),
    ##sa.Column('updated_at', sa.DateTime(), nullable=True),
    #sa.ForeignKeyConstraint(['expense_id'], ['expenses.id'], ),
    #sa.ForeignKeyConstraint(['payer_id'], ['users.id'], ),
    #sa.PrimaryKeyConstraint('id')
    #)

    if environment == "production":
        op.execute(f"ALTER TABLE expenses SET SCHEMA {SCHEMA};")
    if environment == "production":
        op.execute(f"ALTER TABLE expense_members SET SCHEMA {SCHEMA};")
    #if environment == "production":
       ## op.execute(f"ALTER TABLE payments SET SCHEMA {SCHEMA};")    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    #op.drop_table('payments')
    op.drop_table('expense_members')
    op.drop_table('expenses')
    # op.drop_table('friends')
    # ### end Alembic commands ###
